plugins {
    id("java")
    alias(libs.plugins.shadow)
    alias(libs.plugins.runPaper)
    alias(libs.plugins.modrinth)
}

repositories {
    mavenCentral()
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }
    maven { url = "https://repo.codemc.io/repository/maven-public/" }
    maven { url = "https://repo.extendedclip.com/releases/" }
    maven { url = "https://repo.bstats.org" }
}

dependencies {
    implementation(project(":regensystem-api"))

    compileOnly(libs.paper)
    compileOnly(libs.placeholderapi)
    implementation(libs.gson)
    implementation(libs.snakeyaml)
    implementation(libs.bstats)
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)
}

tasks {
    runServer {
        minecraftVersion("1.21.8")
    }
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(21)
}

tasks.shadowJar {
    relocate("org.projectlombok", "fr.darklash.regensystem.libs.lombok")
    relocate("com.google.code.gson", "fr.darklash.regensystem.libs.gson")
    relocate("org.yaml", "fr.darklash.regensystem.libs.snakeyaml")
    relocate("org.bstats", "fr.darklash.regensystem.libs.bstats")
    relocate("me.clip:placeholderapi", "fr.darklash.regensystem.libs.placeholderapi")
    archiveFileName.set("RegenSystem-${rootProject.version}.jar")
    minimize()
}

tasks.build {
    dependsOn(shadowJar)
}

tasks.jar {
    enabled = false
}

processResources {
    def props = [version: rootProject.version]
    inputs.properties props
    filteringCharset = "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

modrinth {
    token.set(System.getenv("MODRINTH_TOKEN") ?: project.findProperty("modrinthToken")?.toString())
    projectId.set("regensystem")
    versionNumber.set(rootProject.version.toString())
    versionName.set("RegenSystem ${rootProject.version}")
    versionType.set("release")
    uploadFile.set(tasks.named("shadowJar").flatMap { it.archiveFile })
    gameVersions.set([ "1.20", "1.20.1", "1.20.2", "1.20.3", "1.20.4", "1.20.5", "1.20.6", "1.21", "1.21.1", "1.21.2", "1.21.3", "1.21.4", "1.21.5", "1.21.6", "1.21.7", "1.21.8" ])
    loaders.set(["bukkit", "paper"])
}
